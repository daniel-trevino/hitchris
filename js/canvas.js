$(window).resize(function () {
/*
	var map = {width:3600, height: 2465};
 	var cuernavaca = {x:688,y:1104};
	var stockholm = {x:1863, y:559};
	var norrkoping = {x:1841, y:574};
 	var munich = {x:1800, y:748};
*/
	
	//---- Map HD
	var map = {width:5452, height: 3733};
 	var cuernavaca = {x:1042,y:1672};
	var norrkoping = {x:2788, y:869};
	var stockholm = {x:2821, y:847};
	var uppsala = {x:2817, y:830};
 	var munich = {x:2726, y:1133};
	
	var image   = new Image();
	// Set up our canvas on the page before doing anything.
	var canvas = document.getElementById('canvas');
	
	//--- Hack to remove the pixels
	var ratio   = window.devicePixelRatio || 1;
	
	var context = canvas.getContext("2d");
	
	// 1. The canvas width should be generated from script, not from inline styling, so it is generated by the window size
	context.canvas.width  = window.innerWidth;
	context.canvas.height = window.innerHeight;
  
	// 2. Ensure the element size stays the same. Basically transforms the percentage to pixels
	canvas.style.width  = canvas.width + "px";
	canvas.style.height = canvas.height + "px";
	
	// 3. Increase the canvas dimensions by the pixel ratio. Removes the pixels like magic.. don't understand it 100% yet
	canvas.width  *= ratio;
	canvas.height *= ratio;

	
	var difference = calcDifference(map, canvas);
	
	var viewPort = calcMapViewPort(difference, cuernavaca, canvas, map);
	
	image.onload = function() {
	   // 4. Scale the context by the pixel ratio. 
	  context.scale(ratio, ratio);
	  context.drawImage(image, viewPort.x, viewPort.y);
	  console.log("Viewport X: " + viewPort.x);
	};
	image.src = "/img/map.svg";
    
    var pts2 = [{x:22,y:59.45},{x:136,y:66},{x:170,y:99},{x:171,y:114},{x:183,y:125},{x:218,y:144},{x:218,y:165},{x:226,y:193},{x:254,y:195},{x:283,y:195},{x:292,y:202},{x:325,y:213},{x:341,y:134},{x:397,y:245},{x:417,y:548}];

	var pts = [{x:688,y:1104},{x:1841,y:574},{x:1863,y:559},{x:1860,y:548},{x:1800,y:748}];
	//var pts = [{x:688,y:1604},{x:1841,y:1074},{x:1863,y:1059},{x:1860,y:1048},{x:1800,y:1348}];

	//mimicSvg(context, pts);
      
	
});

var canvas = document.getElementById("canvas");
var cs = canvas.style;

function mimicSvg(context, pts){

  // make caps & joins round
  context.lineCap='round';
  context.lineJoin='round';


  // draw the outside line with red shadow
  context.shadowColor='red';
  context.shadowBlur='2';
  context.lineWidth=25;
  
  // draw multiple times to darken shadow
  drawPolyline(context, pts);
  drawPolyline(context, pts);
  drawPolyline(context, pts);

  // stop shadowing
  context.shadowColor='transparent';

  // refill the outside line with pink
  context.strokeStyle='pink';
  drawPolyline(context, pts);

  // draw the inside line
  context.lineWidth=2;
  context.strokeStyle='blue';
  drawPolyline(context, pts);

}

function drawPolyline(context, pts){
  context.beginPath();
  context.moveTo(pts[0].x,pts[0].y);
  for(var i=1;i<pts.length;i++){
    context.lineTo(pts[i].x,pts[i].y);
  }
  context.stroke();
}


// ---- 1. Calculate the difference of the map size and the canvas size
function calcDifference(map, canvas) {
	var values;
	
	var valX = (map.width - canvas.width);
	var valY = (map.height - canvas.height);
	
	values = {x:valX, y:valY};
	
	return values;
}

function calcMapViewPort(difference, place, canvas, map) {
	var values;
	var valX, valY;


	valX = (canvas.width / 2) - place.x; //1440-688 = 752
	console.log(valX);
	valX = valX - place.x; //752 - 688 = 64
	valX = valX / 2;
	
	
	valY =  place.y - (canvas.height / 2); // 1104 - 778 = 326
	
	//According to the formula.. The difference plus (778/2) = 715
	valY = valY + (canvas.height / 4);
	
	//Make it negative
	valY = -valY; //-715
	
	
	//Rest the difference to the proportinal variable
	
	values = {x:valX, y:valY};

	
	return values;
}

$(window).load(function () {
	$(window).trigger("resize");
});
